package resources

import (
"github.com/hashicorp/terraform-plugin-sdk/helper/schema"
"github.com/hashicorp/terraform-plugin-sdk/terraform"
"log"
)

//Terraform Provider for CI Classes in a ServiceNow instance.
func Provider() terraform.ResourceProvider {
return &schema.Provider{
Schema: map[string]*schema.Schema{
"instance_url": {
Type:        schema.TypeString,
Description: "The Url of the ServiceNow instance to work with.",
Required:    true,
},
"username": {
Type:        schema.TypeString,
Description: "Username used to manage resources in the ServiceNow instance using Basic authentication.",
Required:    true,
},
"password": {
Type:        schema.TypeString,
Description: "Password of the user to manage resources.",
Required:    true,
Sensitive:   true,
},
},
ResourcesMap: map[string]*schema.Resource{

    {{- range  . }}
   "servicenowcmdb_{{ .CiLabel }}":   Resource{{.CiLabelCamelCase}}(),
    {{- end}}
},
DataSourcesMap: map[string]*schema.Resource{

},
ConfigureFunc: configure,
}
}

func configure(data *schema.ResourceData) (interface{}, error) {
// Create a new client to talk to the instance.
log.Printf("[DEBUG] In configure")
servicenowClient := NewClient(
data.Get("instance_url").(string),
data.Get("username").(string),
data.Get("password").(string))
return servicenowClient, nil
}
